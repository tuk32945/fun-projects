<?php
require_once(dirname(DRUPAL_ROOT) . DIRECTORY_SEPARATOR . 'edutier3/sites/all/modules/tu_framework_mod_disable/tu_framework_mod_disable.values.inc');
/**
 * Disable and uninstall the modules listed in the $modules array.
 */

define("SUB_DOMAIN", trim(explode('.', $_SERVER['HTTP_HOST'])[0]));

//dsm(AH_SITE_ENVIRONMENT);




function tu_framework_mod_disable_cron() {
  //if (isset($_SERVER['HTTP_HOST'])) {}
  if (!defined('AH_SITE_ENVIRONMENT')){
    define('AH_SITE_ENVIRONMENT', SUB_DOMAIN); //this line is for testing purposes outside of acquia environments where AH_SITE_ENVIRONMENT may not be defined already
  }

  if (defined('AH_SITE_ENVIRONMENT')) {

    if (AH_SITE_ENVIRONMENT !== 'dev') {

      $modules = array(
      //'bean_admin_ui', <-- disabled bean_admin_ui and context_ui because of the dependency issues, only while testing once done this should be uncommented
      //'context_ui',
      'devel',
      'feeds_ui',
      'feeds_tamper_ui',
      'field_ui',
      'http_response_headers_ui',
      'rules_admin',
      'views_ui'
      );

      module_disable($modules, FALSE);
      /*
      this can be commented out until we decide on the dependency issue otherwise we will get popups for bean and context_ui
      module_disable(array_keys($modules_readable_name), FALSE);
      */
    }
  }
}

function tu_framework_mod_disable_permission(){
  return array(
  'administer tu_framework_mod_disable' => array(
    'title' => t('<em>TU Admin UI Disable</em> Access TU Framework Mod Disabler Configuration'),
    'description' =>  t('Administer Config for TU Mod Disabler'),
  ),
);
}

function tu_framework_mod_disable_menu() {

  $items = array();

  $items['admin/config/tu-config/tu-framework-mod-disable'] = array(
    'title' => 'TU Framework Module Disabler',
    'description' => 'Settings page related to Module Disabler.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tu_framework_mod_disable_settings'),
    'access arguments' => array('administer tu_framework_mod_disable'),
    'weight' => 0,
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function tu_framework_mod_disable_settings($form, &$form_state){

  global $modules_readable_name;

  $form['tu_framework_mod_disable_wrapper'] = array(
    '#type' => 'fieldset',
    '#title' => t('Disable All Modules Below'),
  );

  $form['tu_framework_mod_disable_each_wrapper'] = array(
    '#type' => 'fieldset',
    '#title' => t('Individually Choose the Modules You Want To Disable'),
  );


  $form['tu_framework_mod_disable_wrapper']['tu_framework_mod_disable_toggle'] = array(
    '#type' => 'checkbox',
    '#title' => 'Toggle Cron Activation',
    '#description' => '(Disable All of the following Modules on Next Cron Run)',
  );

  $form['tu_framework_mod_disable_each_wrapper']['tu_framework_mod_disable_toggle_each'] = array(
    '#type' => 'checkboxes',
    '#title' =>  '',
    '#description' => 'The Selected Modules Will Be Disabled',
    '#options' => $modules_readable_name,


  );

  $form['buttons']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
tu_framework_mod_disable_form_submit('tu_framework_mod_disable_wrapper', $form_state);
 return $form;
}

function tu_framework_mod_disable_validate(&$form, &$form_state){

}

function tu_framework_mod_disable_form_submit($form_id, &$form_state){
  drupal_set_message('Thanks For Your Information');
print_r($form_state['tu_framework_mod_disable_each_wrapper']['tu_framework_mod_disable_toggle_each']);
}
